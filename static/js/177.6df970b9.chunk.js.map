{"version":3,"file":"static/js/177.6df970b9.chunk.js","mappings":"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","sources":["api/index.ts","components/auth/styled.tsx","components/auth/AuthInput.tsx","components/auth/Auth.tsx","state/actions/auth.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { HoldingItem, Transaction, AuthData } from \"../common/modelTypes\";\n\nconst API = axios.create({baseURL: process.env.REACT_APP_API /* \"http://localhost:8000\" */   })\n\n//Holdings\nexport const fetchHoldings = (userId: string) =>\n  API.get(\"/holdings\", { params: { userId: userId } });\n\nexport const addHolding = (newHolding: HoldingItem) =>\n  API.post(\"/holdings\", newHolding);\n\nexport const updateHolding = (name: string, updatedHolding: HoldingItem) =>\n  API.patch(`${\"/holdings\"}/${name}`, updatedHolding);\n\n//Pokud se všechen Holding prodal (tzn. držený amount = 0), tak mažu z databáze. V případném opětovném nákupu se vytvoří znovu a od té doby se znovu počítá průměrná cena a P/L\nexport const deleteHolding = (formData: Object) =>\n  API.post(`${\"/holdings\"}/delete`, formData);\n\n//Transactions history\nexport const fetchTransactions = (userId: string) =>\n  API.get(\"/transactions\", { params: { userId: userId } });\n\nexport const addTransaction = (newTransaction: Transaction) =>\n  API.post(\"/transactions\", newTransaction);\n\n//Auth\nexport const registerUser = (userData: AuthData) =>\n  API.post(\"/register\", userData);\n\nexport const loginUser = (userData: AuthData) => API.post(\"/login\", userData);\n","import styled from \"styled-components\";\n\nexport const StyledAuth = styled.div`\n  height: 100%;\n  margin-top: 7%;\n\n  .paper {\n    margin-top: 8px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 15px;\n  }\n  .avatar {\n    margin: 5px;\n    margin-top: 10px;\n    background-color: red;\n  }\n  .form {\n    width: 100%;\n    margin-top: 10px;\n  }\n  .submit {\n    margin: 6px 0px 2px;\n  }\n  .google-button {\n    margin-bottom: 5px;\n    margin-top: 5px;\n  }\n`;\n","import { FC } from \"react\";\nimport { TextField, Grid, InputAdornment, IconButton } from \"@mui/material\";\nimport { MdVisibility } from \"react-icons/md\";\nimport { MdVisibilityOff } from \"react-icons/md\";\n\ntype InputPropss = {\n  label: string;\n  startAdornment?: string;\n  half?: boolean;\n  name?: string;\n  autoFocus?: boolean;\n  type?: string;\n  handleShowPassword?: () => void;\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst TestInput: FC<InputPropss> = ({\n  half,\n  name,\n  label,\n  handleChange,\n  autoFocus,\n  type,\n  handleShowPassword,\n}) => {\n  return (\n    <Grid item xs={12} sm={half ? 6 : 12}>\n      <TextField\n        name={name}\n        onChange={handleChange}\n        variant=\"outlined\"\n        required\n        fullWidth\n        label={label}\n        autoFocus={autoFocus}\n        type={type}\n        InputProps={{\n          endAdornment:\n            name === \"password\" ? (\n              <InputAdornment position=\"end\">\n                <IconButton onClick={handleShowPassword}>\n                  {type === \"password\" ? <MdVisibility /> : <MdVisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            ) : (\n              \"\"\n            ),\n        }}\n        sx={{\n          \"& label.Mui-focused\": {\n            color: \"#6c1c6a\",\n          },\n          \"& .MuiInput-underline:after\": {\n            borderBottomColor: \"#6c1c6a\",\n          },\n          \"& .MuiOutlinedInput-root\": {\n            \"&.Mui-focused fieldset\": {\n              borderColor: \"#6c1c6a\",\n            },\n          },\n        }}\n      />\n    </Grid>\n  );\n};\n\nexport default TestInput;\n","import React, { useState, useEffect, FC } from \"react\";\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Typography,\n  Container,\n} from \"@mui/material\";\nimport { FiLock } from \"react-icons/fi\";\nimport { AiOutlineGoogle } from \"react-icons/ai\";\nimport { StyledAuth } from \"./styled\";\nimport AuthInput from \"./AuthInput\";\nimport {\n  GoogleLogin,\n  GoogleLoginResponse,\n  GoogleLoginResponseOffline,\n} from \"react-google-login\";\nimport { gapi } from \"gapi-script\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from \"../../state/hooks\";\nimport { registerUser, loginUser } from \"../../state/actions/auth\";\nimport { CLEAR_AUTH_ERROR, AUTH_ERROR } from \"../../constants/actionTypes\";\nimport MyButton from \"../layout/MyButton\";\nimport LoadingSpinner from \"../layout/LoadingSpinner\";\nimport { RootState } from \"../..\";\n\nconst initialState = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\n\nconst Auth: FC = () => {\n  const [formData, setFormData] = useState(initialState);\n  const [isRegistration, setIsRegistration] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [passwordValid, setPasswordValid] = useState(true);\n\n  const clientID = process.env.REACT_APP_GOOGLE_CLIENT_ID as string;\n\n  const dispatch = useAppDispatch();\n  const authState = useAppSelector((state: RootState) => state.auth);\n  const loadingState = useAppSelector(\n    (state: RootState) => state.errorAndLoading\n  );\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const initClient = () => {\n      gapi.client.init({\n        clientId: clientID,\n        scope: \"\",\n      });\n    };\n    gapi.load(\"client:auth2\", initClient);\n    dispatch({ type: CLEAR_AUTH_ERROR });\n  }, []);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    if (!passwordValid) {\n      setPasswordValid(true);\n    }\n    if (authState.error) {\n      dispatch({ type: CLEAR_AUTH_ERROR });\n    }\n    setFormData({ ...formData, [e.target.name]: e.target.value }); //narolluje všechny staré formData a změní pouze ty, které se rovanjí name (např firstName v objektu = firstName name inputu) a priradi tam current value. PŘEDPOKLAD: POLOŽKY V OBJEKTU = NAME INPUTŮ\n  };\n\n  const handleSubmit = (e: React.SyntheticEvent): void => {\n    e.preventDefault();\n\n    if (isRegistration) {\n      if (formData.password.length >= 6) {\n        dispatch(registerUser(formData, history));\n      } else {\n        setPasswordValid(false);\n      }\n    } else {\n      dispatch(loginUser(formData, history));\n    }\n  };\n\n  const googleSuccess = async (\n    res: GoogleLoginResponse | GoogleLoginResponseOffline\n  ): Promise<void> => {\n    let result;\n    let token;\n    if (\"profileObj\" in res) {\n      result = res?.profileObj;\n      token = res?.tokenId;\n    }\n\n    try {\n      dispatch({ type: \"AUTH\", payload: { result, token } });\n      history.push(\"/\");\n    } catch (error: any) {\n      const errMsg =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({\n        type: AUTH_ERROR,\n        payload: errMsg,\n      });\n    }\n  };\n\n  const googleFailure = (error: any): void => {\n    const errMsg =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: AUTH_ERROR,\n      payload: errMsg,\n    });\n  };\n\n  return (\n    <StyledAuth>\n      {loadingState.loading ? (\n        <LoadingSpinner />\n      ) : (\n        <Container maxWidth=\"xs\">\n          <Paper className=\"paper\" elevation={3}>\n            <Avatar className=\"avatar\">\n              <FiLock />\n            </Avatar>\n            <Typography variant=\"h5\">\n              {isRegistration ? \"Sign Up\" : \"Sign In\"}\n            </Typography>\n            <form className=\"form\" onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                {isRegistration && (\n                  <>\n                    <AuthInput\n                      name=\"firstName\"\n                      label=\"First Name\"\n                      handleChange={handleChange}\n                      autoFocus\n                      half\n                    />\n                    <AuthInput\n                      name=\"lastName\"\n                      label=\"Last Name\"\n                      handleChange={handleChange}\n                      half\n                    />\n                  </>\n                )}\n                <AuthInput\n                  name=\"email\"\n                  label=\"E-mail Address\"\n                  handleChange={handleChange}\n                  type=\"email\"\n                />\n                <AuthInput\n                  name=\"password\"\n                  label=\"Password\"\n                  handleChange={handleChange}\n                  type={showPassword ? \"text\" : \"password\"}\n                  handleShowPassword={() =>\n                    setShowPassword((prevState) => !prevState)\n                  }\n                />\n                {isRegistration && (\n                  <AuthInput\n                    name=\"confirmPassword\"\n                    label=\"Confirm Password\"\n                    handleChange={handleChange}\n                    type=\"password\"\n                  />\n                )}\n              </Grid>\n              {isRegistration && !passwordValid && (\n                <Typography sx={{ color: \"red\" }}>\n                  Password must have at least 6 letters.\n                </Typography>\n              )}\n\n              {authState?.error && (\n                <Typography sx={{ color: \"red\" }}>\n                  {authState.errorMessage}\n                </Typography>\n              )}\n              <MyButton\n                type=\"submit\"\n                variant=\"contained\"\n                purple\n                className=\"submit\"\n                fullWidth\n                text={isRegistration ? \"Sign Up\" : \"Sign In\"}\n              />\n              <GoogleLogin\n                clientId={clientID}\n                render={(renderProps) => (\n                  <MyButton\n                    text=\"Sign in with google\"\n                    purple\n                    className=\"google-button\"\n                    fullWidth\n                    onClick={renderProps.onClick}\n                    startIcon={<AiOutlineGoogle />}\n                    variant=\"contained\"\n                  />\n                )}\n                cookiePolicy=\"single_host_origin\"\n                onSuccess={googleSuccess}\n                onFailure={googleFailure}\n              />\n              <Grid container justifyContent=\"flex-end\">\n                <Grid item>\n                  <Button\n                    onClick={() => setIsRegistration((prevState) => !prevState)}\n                    sx={{ color: \"purple\" }}\n                  >\n                    {isRegistration\n                      ? \"Already have an account? Sign In\"\n                      : \"Don't have an account? Sign Up\"}\n                  </Button>\n                </Grid>\n              </Grid>\n            </form>\n          </Paper>\n        </Container>\n      )}\n    </StyledAuth>\n  );\n};\nexport default Auth;\n","import {\n  AUTH,\n  AUTH_ERROR,\n  START_LOADING,\n  STOP_LOADING,\n} from \"../../constants/actionTypes\";\nimport { AuthData } from \"../../common/modelTypes\";\nimport { AuthActions, ErrorLoadingActions } from \"../../common/actionTypes\";\nimport { Dispatch } from \"@reduxjs/toolkit\";\n\nimport * as api from \"../../api/index\";\nimport { AxiosError } from \"axios\";\nimport axios from \"axios\";\n\nexport const loginUser =\n  (formData: AuthData, history: any) =>\n  async (dispatch: Dispatch<AuthActions | ErrorLoadingActions>) => {\n    try {\n      dispatch({ type: START_LOADING });\n      const { data } = await api.loginUser(formData);\n      dispatch({ type: AUTH, payload: data });\n      history.push(\"/\");\n      if (data) {\n        setTimeout(() => {\n          dispatch({ type: STOP_LOADING });\n        }, 100);\n      }\n    } catch (error: any) {\n      dispatch({ type: STOP_LOADING });\n\n      const errMsg =\n        error.response && error.response?.data?.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({\n        type: AUTH_ERROR,\n        payload: errMsg,\n      });\n    }\n  };\n\nexport const registerUser =\n  (formData: AuthData, history: any) =>\n  async (dispatch: Dispatch<AuthActions | ErrorLoadingActions>) => {\n    try {\n      dispatch({ type: START_LOADING });\n      const { data } = await api.registerUser(formData);\n      dispatch({ type: AUTH, payload: data });\n      history.push(\"/\");\n      if (data) {\n        setTimeout(() => {\n          dispatch({ type: STOP_LOADING });\n        }, 100);\n      }\n    } catch (error: any) {\n      dispatch({ type: STOP_LOADING });\n      const errMsg =\n        error.response && error.response.data?.message\n          ? error.response.data.message\n          : error.message;\n\n      dispatch({\n        type: AUTH_ERROR,\n        payload: errMsg,\n      });\n    }\n  };\n"],"names":["API","axios","baseURL","process","fetchHoldings","userId","get","params","addHolding","newHolding","post","updateHolding","name","updatedHolding","patch","deleteHolding","formData","fetchTransactions","addTransaction","newTransaction","registerUser","userData","loginUser","StyledAuth","styled","half","label","handleChange","autoFocus","type","handleShowPassword","Grid","item","xs","sm","TextField","onChange","variant","required","fullWidth","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","sx","color","borderBottomColor","borderColor","initialState","firstName","lastName","email","password","confirmPassword","useState","setFormData","isRegistration","setIsRegistration","showPassword","setShowPassword","passwordValid","setPasswordValid","clientID","dispatch","useAppDispatch","authState","useAppSelector","state","auth","loadingState","errorAndLoading","history","useHistory","useEffect","gapi","clientId","scope","CLEAR_AUTH_ERROR","e","error","target","value","googleSuccess","res","result","profileObj","token","tokenId","payload","push","errMsg","response","data","message","AUTH_ERROR","loading","LoadingSpinner","Container","maxWidth","Paper","className","elevation","Avatar","Typography","onSubmit","preventDefault","length","START_LOADING","api","AUTH","setTimeout","STOP_LOADING","container","spacing","AuthInput","prevState","errorMessage","MyButton","purple","text","GoogleLogin","render","renderProps","startIcon","cookiePolicy","onSuccess","onFailure","justifyContent","Button"],"sourceRoot":""}