{"version":3,"file":"static/js/14.1b122a4e.chunk.js","mappings":"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","sources":["components/home-dashboard/styled.tsx","components/home-dashboard/HomePage.tsx","components/home-dashboard/DashboardTable.tsx","components/home-dashboard/Dashboard.tsx","pages/HomeDashboard.tsx","utils/number-format.ts"],"sourcesContent":["import styled from \"styled-components\";\nimport {\n  centerItems,\n  theme,\n  positiveChange,\n  negativeChange,\n} from \"../../common/theme\";\n\nexport const StyledHomePage = styled.div`\n  display: flex;\n  justify-content: center;\n  .home-container {\n    width: 1110px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n  .header-container {\n    ${centerItems}\n  }\n  h2 {\n    font-size: 40px;\n    margin: 1% 0;\n    @media only screen and (max-width: 535px) {\n      font-size: 25px;\n    }\n  }\n  a {\n    text-decoration: none;\n  }\n\n  .buttons-container {\n    display: flex;\n    ${centerItems};\n    margin-bottom: 1%;\n  }\n\n  .buttons-container > * {\n    margin: 1%;\n  }\n`;\n\nexport const StyledDashboard = styled.div`\n  width: 1110px;\n  max-width: 100vw;\n  margin: 0 auto;\n  overflow: hidden;\n`;\n\nexport const DashboardWrapper = styled.div`\n  width: 100%;\n  background-color: white;\n  ${theme.boxShadow}\n  border-radius: ${theme.borderRadius};\n  overflow-x: scroll;\n\n  .positive-change {\n    ${positiveChange}\n    cursor:default\n  }\n  .negative-change {\n    ${negativeChange}\n    cursor:default\n  }\n  .coin-name,\n  .coin-price {\n    font-weight: bold;\n    cursor: default;\n  }\n  .coin-ticker {\n    color: grey;\n    cursor: default;\n  }\n\n  .default {\n    cursor: default;\n  }\n`;\n","import { StyledHomePage } from \"./styled\";\nimport { Link } from \"react-router-dom\";\nimport MyButton from \"../layout/MyButton\";\nimport { FC } from \"react\";\n\nconst HomePage: FC = () => {\n  return (\n    <StyledHomePage>\n      <div className=\"home-container\">\n        <div className=\"header-container\">\n          <h2>Welcome to Crypto Tracker</h2>\n        </div>\n        <div className=\"buttons-container\">\n          <MyButton\n            text=\"My holdings\"\n            purple\n            component={Link}\n            to=\"/holdings\"\n            variant=\"contained\"\n          />\n          <MyButton\n            text=\"Transaction history\"\n            purple\n            component={Link}\n            to=\"/transactions\"\n            variant=\"contained\"\n          />\n        </div>\n      </div>\n    </StyledHomePage>\n  );\n};\nexport default HomePage;\n","import { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useContext, FC } from \"react\";\nimport DashboardContext from \"../../state/DashboardContext\";\nimport FormContext from \"../../state/FormContext\";\nimport { intlNumberFormat, numberFormat } from \"../../utils/number-format\";\nimport { useHistory } from \"react-router-dom\";\nimport { DashboardWrapper } from \"./styled\";\nimport { DashboardCryptoItem } from \"../../common/modelTypes\";\n\nconst DashboardTable: FC = () => {\n  const { dashboardData } = useContext(DashboardContext);\n\n  const { setSelectedCrypto, setFormShown } = useContext(FormContext);\n\n  const dashboardCryptoData = dashboardData;\n\n  const history = useHistory();\n\n  const rows: any = dashboardCryptoData?.map(\n    (crypto: DashboardCryptoItem, index: number) => {\n      const lastUpdate = new Date(crypto?.last_updated);\n\n      return {\n        id: index + 1,\n        identifier: crypto.name,\n        icon: crypto.imageURL,\n        name: crypto.name,\n        ticker: crypto.ticker.toUpperCase(),\n        price: intlNumberFormat(crypto.current_price, \"usd\"),\n        marketCap: \"$\" + numberFormat(crypto.market_cap),\n        priceChangeNumber: crypto.price_change_24h,\n        priceChange: intlNumberFormat(crypto.price_change_24h, \"usd\"),\n        priceChangePercentage:\n          crypto.price_change_percentage_24h.toFixed(2) + \"%\",\n        allTimeHigh: intlNumberFormat(crypto.allTimeHigh, \"usd\"),\n        lastUpdate: lastUpdate.toLocaleTimeString(),\n      };\n    }\n  );\n\n  const columns: GridColDef[] = [\n    {\n      field: \"id\",\n      headerName: \"#\",\n      width: 20,\n      align: \"center\",\n      headerAlign: \"center\",\n      cellClassName: \"default\",\n    },\n    {\n      field: \"icon\",\n      renderCell: (params) => {\n        return (\n          <img alt=\"icon\" src={params.row.icon} width=\"25px\" height=\"25px\" />\n        );\n      },\n      headerName: \"\",\n      width: 30,\n      cellClassName: \"default\",\n    },\n    {\n      field: \"ticker\",\n      headerName: \"\",\n      width: 70,\n      cellClassName: \"coin-ticker\",\n    },\n    {\n      field: \"name\",\n      headerName: \"Name\",\n      width: 150,\n      cellClassName: \"coin-name\",\n    },\n\n    {\n      field: \"price\",\n      headerName: \"Price\",\n      width: 120,\n      headerAlign: \"right\",\n      align: \"right\",\n      cellClassName: \"coin-price\",\n    },\n    {\n      field: \"marketCap\",\n      headerName: \"Market Cap\",\n      width: 170,\n      headerAlign: \"right\",\n      align: \"right\",\n      cellClassName: \"default\",\n    },\n    {\n      field: \"priceChange\",\n      headerName: \"24h change\",\n      width: 115,\n      headerAlign: \"right\",\n      align: \"right\",\n      cellClassName: (params) =>\n        params.row.priceChangeNumber > 0\n          ? \"positive-change\"\n          : \"negative-change\",\n    },\n    {\n      field: \"priceChangePercentage\",\n      headerName: \"24h change %\",\n      width: 115,\n      headerAlign: \"right\",\n      align: \"right\",\n      cellClassName: (params) =>\n        params.row.priceChangeNumber > 0\n          ? \"positive-change\"\n          : \"negative-change\",\n    },\n    {\n      field: \"allTimeHigh\",\n      headerName: \"All time high\",\n      width: 120,\n      headerAlign: \"right\",\n      align: \"right\",\n      cellClassName: \"default\",\n    },\n    {\n      field: \"lastUpdate\",\n      headerName: \"Last updated\",\n      width: 130,\n      headerAlign: \"right\",\n      align: \"right\",\n      cellClassName: \"default\",\n    },\n  ];\n\n  const handleRowClick = (params: any): any => {\n    setSelectedCrypto(params.row.identifier);\n    setFormShown(true);\n    history.push(\"/holdings\");\n  };\n\n  return (\n    <DashboardWrapper>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        autoHeight\n        density={\"comfortable\"}\n        disableSelectionOnClick\n        onRowClick={handleRowClick}\n      />\n    </DashboardWrapper>\n  );\n};\n\nexport default DashboardTable;\n","import { StyledDashboard } from \"./styled\";\n\nimport HomePage from \"./HomePage\";\nimport DashboardTable from \"./DashboardTable\";\nimport { useContext, useEffect, FC } from \"react\";\nimport DashboardContext from \"../../state/DashboardContext\";\nimport LoadingSpinner from \"../layout/LoadingSpinner\";\n\nconst Dashboard: FC = () => {\n  const { isLoading, getDashboardData } = useContext(DashboardContext);\n\n  useEffect(() => {\n    getDashboardData();\n  }, []);\n\n  return (\n    <div>\n      <HomePage />\n      <StyledDashboard>\n        {isLoading ? <LoadingSpinner /> : <DashboardTable />}\n      </StyledDashboard>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import Dashboard from \"../components/home-dashboard/Dashboard\";\nimport { FC } from \"react\";\n\nconst HomeDashboard: FC = () => {\n  return <Dashboard />;\n};\nexport default HomeDashboard;\n","export const intlNumberFormat = (value: number, currency: string): string =>\n\n  new Intl.NumberFormat('en-EN', {\n    style: 'currency',\n    currency: currency,\n  }).format(value);\n\n  export const numberFormat = (number: number): string => {\n    const str = number.toString();\n    const before = str.split('.')[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    const after = str.split('.')[1] ? `.${str.split('.')[1]}` : '';\n    const decimal = after.substring(0, 8);\n    const formattedNumber = before + decimal;\n    return formattedNumber;\n  };"],"names":["StyledHomePage","styled","centerItems","StyledDashboard","DashboardWrapper","theme","positiveChange","negativeChange","className","MyButton","text","purple","component","Link","to","variant","dashboardData","useContext","DashboardContext","FormContext","setSelectedCrypto","setFormShown","dashboardCryptoData","history","useHistory","rows","map","crypto","index","lastUpdate","Date","last_updated","id","identifier","name","icon","imageURL","ticker","toUpperCase","price","intlNumberFormat","current_price","marketCap","numberFormat","market_cap","priceChangeNumber","price_change_24h","priceChange","priceChangePercentage","price_change_percentage_24h","toFixed","allTimeHigh","toLocaleTimeString","columns","field","headerName","width","align","headerAlign","cellClassName","renderCell","params","alt","src","row","height","DataGrid","autoHeight","density","disableSelectionOnClick","onRowClick","push","isLoading","getDashboardData","useEffect","LoadingSpinner","value","currency","Intl","NumberFormat","style","format","number","str","toString","split","replace","substring"],"sourceRoot":""}